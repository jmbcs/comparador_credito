{"ast":null,"code":"var _jsxFileName = \"/home/julio/Desktop/credito/src/components/DebtMapChart.tsx\",\n  _s = $RefreshSig$();\nimport { BarChart3, Calendar, DollarSign, Smartphone, TrendingUp } from 'lucide-react';\nimport React, { useMemo, useState } from 'react';\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DebtMapChart = ({\n  data,\n  selectedBanks\n}) => {\n  _s();\n  const [viewMode, setViewMode] = useState('years');\n  const [selectedYear, setSelectedYear] = useState('all');\n  const [selectedBankFilter, setSelectedBankFilter] = useState('all');\n  const [chartType, setChartType] = useState('debt');\n\n  // Get available years\n  const availableYears = useMemo(() => {\n    const years = Array.from(new Set(data.map(d => d.Ano))).sort((a, b) => a - b);\n    return years;\n  }, [data]);\n\n  // Filter data based on selected options\n  const filteredData = useMemo(() => {\n    let filtered = data.filter(entry => selectedBanks.includes(entry.Banco));\n\n    // Filter by year\n    if (selectedYear !== 'all') {\n      filtered = filtered.filter(entry => entry.Ano === parseInt(selectedYear));\n    }\n\n    // Filter by bank\n    if (selectedBankFilter !== 'all') {\n      filtered = filtered.filter(entry => entry.Banco === selectedBankFilter);\n    }\n\n    // Filter by view mode\n    if (viewMode === 'years') {\n      filtered = filtered.filter(entry => entry.Mês % 12 === 0);\n    }\n    return filtered;\n  }, [data, selectedBanks, selectedYear, selectedBankFilter, viewMode]);\n\n  // Prepare chart data\n  const chartData = useMemo(() => {\n    const groupedData = [];\n    const timePoints = viewMode === 'years' ? Array.from(new Set(filteredData.map(d => d.Ano))).sort((a, b) => a - b) : Array.from(new Set(filteredData.map(d => `${d.Ano}-${d.Mês}`))).sort();\n    timePoints.forEach(timePoint => {\n      const timeData = {\n        timePoint,\n        label: viewMode === 'years' ? timePoint : `${timePoint.split('-')[0]}/${timePoint.split('-')[1]}`\n      };\n      selectedBanks.forEach(bank => {\n        const bankData = viewMode === 'years' ? filteredData.find(d => d.Banco === bank && d.Ano === timePoint) : filteredData.find(d => d.Banco === bank && `${d.Ano}-${d.Mês}` === timePoint);\n        if (bankData) {\n          timeData[`${bank}_debt`] = bankData[\"Capital em Dívida (€)\"];\n          timeData[`${bank}_commissions`] = bankData[\"Comissões Acumuladas (€)\"];\n          timeData[`${bank}_payments`] = bankData[\"Prestação (€)\"];\n        }\n      });\n      groupedData.push(timeData);\n    });\n    return groupedData;\n  }, [filteredData, selectedBanks, viewMode]);\n  const colors = ['#3b82f6', '#ef4444', '#10b981', '#f59e0b', '#8b5cf6', '#06b6d4', '#84cc16', '#f97316'];\n  const formatCurrency = value => {\n    if (typeof value === 'number') {\n      return new Intl.NumberFormat('pt-PT', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(value);\n    }\n    return value;\n  };\n  const getChartTitle = () => {\n    switch (chartType) {\n      case 'debt':\n        return 'Evolução do Capital em Dívida';\n      case 'commissions':\n        return 'Evolução das Comissões Acumuladas';\n      case 'payments':\n        return 'Evolução das Prestações';\n      default:\n        return 'Evolução';\n    }\n  };\n  const getYAxisLabel = () => {\n    switch (chartType) {\n      case 'debt':\n        return 'Capital em Dívida (€)';\n      case 'commissions':\n        return 'Comissões Acumuladas (€)';\n      case 'payments':\n        return 'Prestação (€)';\n      default:\n        return '';\n    }\n  };\n  const getDataKey = bank => {\n    switch (chartType) {\n      case 'debt':\n        return `${bank}_debt`;\n      case 'commissions':\n        return `${bank}_commissions`;\n      case 'payments':\n        return `${bank}_payments`;\n      default:\n        return `${bank}_debt`;\n    }\n  };\n  const getLegendName = bank => {\n    switch (chartType) {\n      case 'debt':\n        return `${bank} - Capital`;\n      case 'commissions':\n        return `${bank} - Comissões`;\n      case 'payments':\n        return `${bank} - Prestações`;\n      default:\n        return bank;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\",\n          children: /*#__PURE__*/_jsxDEV(BarChart3, {\n            className: \"h-5 w-5 text-blue-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold text-gray-900\",\n            children: \"Mapa de D\\xEDvida\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: \"An\\xE1lise detalhada da evolu\\xE7\\xE3o do empr\\xE9stimo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2 text-sm text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(Smartphone, {\n          className: \"h-4 w-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [selectedBanks.length, \" bancos selecionados\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-2\",\n          children: \"Modo de Visualiza\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex bg-gray-100 rounded-lg p-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setViewMode('years'),\n            className: `flex-1 py-2 px-3 text-sm font-medium rounded-md transition-all ${viewMode === 'years' ? 'bg-blue-600 text-white shadow-sm' : 'text-gray-700 hover:text-gray-900'}`,\n            children: \"Anos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setViewMode('months'),\n            className: `flex-1 py-2 px-3 text-sm font-medium rounded-md transition-all ${viewMode === 'months' ? 'bg-blue-600 text-white shadow-sm' : 'text-gray-700 hover:text-gray-900'}`,\n            children: \"Meses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-2\",\n          children: \"Filtrar por Ano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          className: \"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"Todos os anos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this), availableYears.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-sm font-medium text-gray-700 mb-2\",\n          children: \"Filtrar por Banco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-wrap gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedBankFilter('all'),\n            className: `px-3 py-2 text-sm font-medium rounded-lg border transition-all ${selectedBankFilter === 'all' ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'}`,\n            children: \"Todos\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), selectedBanks.map(bank => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setSelectedBankFilter(bank),\n            className: `px-3 py-2 text-sm font-medium rounded-lg border transition-all ${selectedBankFilter === bank ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'}`,\n            children: bank\n          }, bank, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center space-x-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-sm font-medium text-gray-700\",\n        children: \"Tipo de Gr\\xE1fico:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setChartType('debt'),\n          className: `flex items-center space-x-2 px-3 py-2 text-sm font-medium rounded-lg border transition-all ${chartType === 'debt' ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'}`,\n          children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Capital\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setChartType('commissions'),\n          className: `flex items-center space-x-2 px-3 py-2 text-sm font-medium rounded-lg border transition-all ${chartType === 'commissions' ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'}`,\n          children: [/*#__PURE__*/_jsxDEV(DollarSign, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Comiss\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setChartType('payments'),\n          className: `flex items-center space-x-2 px-3 py-2 text-sm font-medium rounded-lg border transition-all ${chartType === 'payments' ? 'bg-blue-600 text-white border-blue-600' : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'}`,\n          children: [/*#__PURE__*/_jsxDEV(Calendar, {\n            className: \"h-4 w-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Presta\\xE7\\xF5es\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold mb-6 flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(BarChart3, {\n          className: \"h-5 w-5 text-blue-600\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: getChartTitle()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }, this), chartData.length > 0 ? /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#e5e7eb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"label\",\n            label: {\n              value: viewMode === 'years' ? 'Ano' : 'Período',\n              position: 'insideBottom',\n              offset: -10\n            },\n            tick: {\n              fontSize: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            label: {\n              value: getYAxisLabel(),\n              angle: -90,\n              position: 'insideLeft'\n            },\n            tickFormatter: value => `${(value / 1000).toFixed(0)}k`,\n            tick: {\n              fontSize: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => [formatCurrency(value), getLegendName('').split(' - ')[1] || 'Valor'],\n            labelFormatter: label => viewMode === 'years' ? `Ano ${label}` : `Período ${label}`,\n            contentStyle: {\n              backgroundColor: 'white',\n              border: '1px solid #e5e7eb',\n              borderRadius: '8px',\n              boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this), selectedBanks.map((bank, index) => /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: getDataKey(bank),\n            name: getLegendName(bank),\n            stroke: colors[index % colors.length],\n            strokeWidth: 3,\n            dot: {\n              r: 5,\n              strokeWidth: 2\n            },\n            activeDot: {\n              r: 8\n            }\n          }, getDataKey(bank), false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 33\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center h-64 text-gray-500\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(BarChart3, {\n            className: \"h-12 w-12 mx-auto mb-4 text-gray-300\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-lg font-medium\",\n            children: \"Nenhum dado dispon\\xEDvel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: \"Selecione bancos e filtros para visualizar os dados\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }, this), chartData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-4\",\n      children: selectedBanks.map((bank, index) => {\n        const latestData = chartData[chartData.length - 1];\n        const value = (latestData === null || latestData === void 0 ? void 0 : latestData[getDataKey(bank)]) || 0;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-sm font-medium text-gray-600\",\n                children: bank\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-2xl font-bold text-gray-900\",\n                children: formatCurrency(value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-3 h-3 rounded-full\",\n              style: {\n                backgroundColor: colors[index % colors.length]\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }, this)\n        }, bank, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 9\n  }, this);\n};\n_s(DebtMapChart, \"9TCOuUJxB4pG0prwBz5vCYvydJU=\");\n_c = DebtMapChart;\nvar _c;\n$RefreshReg$(_c, \"DebtMapChart\");","map":{"version":3,"names":["BarChart3","Calendar","DollarSign","Smartphone","TrendingUp","React","useMemo","useState","CartesianGrid","Legend","Line","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","jsxDEV","_jsxDEV","DebtMapChart","data","selectedBanks","_s","viewMode","setViewMode","selectedYear","setSelectedYear","selectedBankFilter","setSelectedBankFilter","chartType","setChartType","availableYears","years","Array","from","Set","map","d","Ano","sort","a","b","filteredData","filtered","filter","entry","includes","Banco","parseInt","Mês","chartData","groupedData","timePoints","forEach","timePoint","timeData","label","split","bank","bankData","find","push","colors","formatCurrency","value","Intl","NumberFormat","style","currency","format","getChartTitle","getYAxisLabel","getDataKey","getLegendName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","onChange","e","target","year","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","position","offset","tick","fontSize","angle","tickFormatter","toFixed","formatter","labelFormatter","contentStyle","backgroundColor","border","borderRadius","boxShadow","index","type","name","strokeWidth","dot","r","activeDot","latestData","_c","$RefreshReg$"],"sources":["/home/julio/Desktop/credito/src/components/DebtMapChart.tsx"],"sourcesContent":["import { BarChart3, Calendar, DollarSign, Smartphone, TrendingUp } from 'lucide-react';\nimport React, { useMemo, useState } from 'react';\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { DebtMapEntry } from '../types';\n\ninterface DebtMapChartProps {\n    data: DebtMapEntry[];\n    selectedBanks: string[];\n}\n\ntype ViewMode = 'years' | 'months';\ntype ChartType = 'debt' | 'commissions' | 'payments';\n\nexport const DebtMapChart: React.FC<DebtMapChartProps> = ({ data, selectedBanks }) => {\n    const [viewMode, setViewMode] = useState<ViewMode>('years');\n    const [selectedYear, setSelectedYear] = useState<string>('all');\n    const [selectedBankFilter, setSelectedBankFilter] = useState<string>('all');\n    const [chartType, setChartType] = useState<ChartType>('debt');\n\n    // Get available years\n    const availableYears = useMemo(() => {\n        const years = Array.from(new Set(data.map(d => d.Ano))).sort((a, b) => a - b);\n        return years;\n    }, [data]);\n\n    // Filter data based on selected options\n    const filteredData = useMemo(() => {\n        let filtered = data.filter(entry => selectedBanks.includes(entry.Banco));\n\n        // Filter by year\n        if (selectedYear !== 'all') {\n            filtered = filtered.filter(entry => entry.Ano === parseInt(selectedYear));\n        }\n\n        // Filter by bank\n        if (selectedBankFilter !== 'all') {\n            filtered = filtered.filter(entry => entry.Banco === selectedBankFilter);\n        }\n\n        // Filter by view mode\n        if (viewMode === 'years') {\n            filtered = filtered.filter(entry => entry.Mês % 12 === 0);\n        }\n\n        return filtered;\n    }, [data, selectedBanks, selectedYear, selectedBankFilter, viewMode]);\n\n    // Prepare chart data\n    const chartData = useMemo(() => {\n        const groupedData: any[] = [];\n        const timePoints = viewMode === 'years'\n            ? Array.from(new Set(filteredData.map(d => d.Ano))).sort((a, b) => a - b)\n            : Array.from(new Set(filteredData.map(d => `${d.Ano}-${d.Mês}`))).sort();\n\n        timePoints.forEach(timePoint => {\n            const timeData: any = {\n                timePoint,\n                label: viewMode === 'years' ? timePoint : `${timePoint.split('-')[0]}/${timePoint.split('-')[1]}`\n            };\n\n            selectedBanks.forEach(bank => {\n                const bankData = viewMode === 'years'\n                    ? filteredData.find(d => d.Banco === bank && d.Ano === timePoint)\n                    : filteredData.find(d => d.Banco === bank && `${d.Ano}-${d.Mês}` === timePoint);\n\n                if (bankData) {\n                    timeData[`${bank}_debt`] = bankData[\"Capital em Dívida (€)\"];\n                    timeData[`${bank}_commissions`] = bankData[\"Comissões Acumuladas (€)\"];\n                    timeData[`${bank}_payments`] = bankData[\"Prestação (€)\"];\n                }\n            });\n            groupedData.push(timeData);\n        });\n\n        return groupedData;\n    }, [filteredData, selectedBanks, viewMode]);\n\n    const colors = ['#3b82f6', '#ef4444', '#10b981', '#f59e0b', '#8b5cf6', '#06b6d4', '#84cc16', '#f97316'];\n\n    const formatCurrency = (value: any) => {\n        if (typeof value === 'number') {\n            return new Intl.NumberFormat('pt-PT', {\n                style: 'currency',\n                currency: 'EUR'\n            }).format(value);\n        }\n        return value;\n    };\n\n    const getChartTitle = () => {\n        switch (chartType) {\n            case 'debt': return 'Evolução do Capital em Dívida';\n            case 'commissions': return 'Evolução das Comissões Acumuladas';\n            case 'payments': return 'Evolução das Prestações';\n            default: return 'Evolução';\n        }\n    };\n\n    const getYAxisLabel = () => {\n        switch (chartType) {\n            case 'debt': return 'Capital em Dívida (€)';\n            case 'commissions': return 'Comissões Acumuladas (€)';\n            case 'payments': return 'Prestação (€)';\n            default: return '';\n        }\n    };\n\n    const getDataKey = (bank: string) => {\n        switch (chartType) {\n            case 'debt': return `${bank}_debt`;\n            case 'commissions': return `${bank}_commissions`;\n            case 'payments': return `${bank}_payments`;\n            default: return `${bank}_debt`;\n        }\n    };\n\n    const getLegendName = (bank: string) => {\n        switch (chartType) {\n            case 'debt': return `${bank} - Capital`;\n            case 'commissions': return `${bank} - Comissões`;\n            case 'payments': return `${bank} - Prestações`;\n            default: return bank;\n        }\n    };\n\n    return (\n        <div className=\"space-y-6\">\n            {/* Header */}\n            <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center space-x-3\">\n                    <div className=\"w-10 h-10 bg-blue-100 rounded-lg flex items-center justify-center\">\n                        <BarChart3 className=\"h-5 w-5 text-blue-600\" />\n                    </div>\n                    <div>\n                        <h2 className=\"text-xl font-bold text-gray-900\">Mapa de Dívida</h2>\n                        <p className=\"text-sm text-gray-600\">Análise detalhada da evolução do empréstimo</p>\n                    </div>\n                </div>\n                <div className=\"flex items-center space-x-2 text-sm text-gray-500\">\n                    <Smartphone className=\"h-4 w-4\" />\n                    <span>{selectedBanks.length} bancos selecionados</span>\n                </div>\n            </div>\n\n            {/* Filters */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {/* View Mode */}\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Modo de Visualização</label>\n                    <div className=\"flex bg-gray-100 rounded-lg p-1\">\n                        <button\n                            onClick={() => setViewMode('years')}\n                            className={`flex-1 py-2 px-3 text-sm font-medium rounded-md transition-all ${viewMode === 'years'\n                                    ? 'bg-blue-600 text-white shadow-sm'\n                                    : 'text-gray-700 hover:text-gray-900'\n                                }`}\n                        >\n                            Anos\n                        </button>\n                        <button\n                            onClick={() => setViewMode('months')}\n                            className={`flex-1 py-2 px-3 text-sm font-medium rounded-md transition-all ${viewMode === 'months'\n                                    ? 'bg-blue-600 text-white shadow-sm'\n                                    : 'text-gray-700 hover:text-gray-900'\n                                }`}\n                        >\n                            Meses\n                        </button>\n                    </div>\n                </div>\n\n                {/* Year Filter */}\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Filtrar por Ano</label>\n                    <select\n                        value={selectedYear}\n                        onChange={(e) => setSelectedYear(e.target.value)}\n                        className=\"w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n                    >\n                        <option value=\"all\">Todos os anos</option>\n                        {availableYears.map(year => (\n                            <option key={year} value={year}>{year}</option>\n                        ))}\n                    </select>\n                </div>\n\n                {/* Bank Filter */}\n                <div>\n                    <label className=\"block text-sm font-medium text-gray-700 mb-2\">Filtrar por Banco</label>\n                    <div className=\"flex flex-wrap gap-2\">\n                        <button\n                            onClick={() => setSelectedBankFilter('all')}\n                            className={`px-3 py-2 text-sm font-medium rounded-lg border transition-all ${selectedBankFilter === 'all'\n                                    ? 'bg-blue-600 text-white border-blue-600'\n                                    : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n                                }`}\n                        >\n                            Todos\n                        </button>\n                        {selectedBanks.map(bank => (\n                            <button\n                                key={bank}\n                                onClick={() => setSelectedBankFilter(bank)}\n                                className={`px-3 py-2 text-sm font-medium rounded-lg border transition-all ${selectedBankFilter === bank\n                                        ? 'bg-blue-600 text-white border-blue-600'\n                                        : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n                                    }`}\n                            >\n                                {bank}\n                            </button>\n                        ))}\n                    </div>\n                </div>\n            </div>\n\n            {/* Chart Type Selector */}\n            <div className=\"flex items-center space-x-4\">\n                <span className=\"text-sm font-medium text-gray-700\">Tipo de Gráfico:</span>\n                <div className=\"flex space-x-2\">\n                    <button\n                        onClick={() => setChartType('debt')}\n                        className={`flex items-center space-x-2 px-3 py-2 text-sm font-medium rounded-lg border transition-all ${chartType === 'debt'\n                                ? 'bg-blue-600 text-white border-blue-600'\n                                : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n                            }`}\n                    >\n                        <TrendingUp className=\"h-4 w-4\" />\n                        <span>Capital</span>\n                    </button>\n                    <button\n                        onClick={() => setChartType('commissions')}\n                        className={`flex items-center space-x-2 px-3 py-2 text-sm font-medium rounded-lg border transition-all ${chartType === 'commissions'\n                                ? 'bg-blue-600 text-white border-blue-600'\n                                : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n                            }`}\n                    >\n                        <DollarSign className=\"h-4 w-4\" />\n                        <span>Comissões</span>\n                    </button>\n                    <button\n                        onClick={() => setChartType('payments')}\n                        className={`flex items-center space-x-2 px-3 py-2 text-sm font-medium rounded-lg border transition-all ${chartType === 'payments'\n                                ? 'bg-blue-600 text-white border-blue-600'\n                                : 'bg-white text-gray-700 border-gray-300 hover:bg-gray-50'\n                            }`}\n                    >\n                        <Calendar className=\"h-4 w-4\" />\n                        <span>Prestações</span>\n                    </button>\n                </div>\n            </div>\n\n            {/* Chart */}\n            <div className=\"card\">\n                <h3 className=\"text-xl font-semibold mb-6 flex items-center space-x-2\">\n                    <BarChart3 className=\"h-5 w-5 text-blue-600\" />\n                    <span>{getChartTitle()}</span>\n                </h3>\n\n                {chartData.length > 0 ? (\n                    <ResponsiveContainer width=\"100%\" height={400}>\n                        <LineChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\n                            <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" />\n                            <XAxis\n                                dataKey=\"label\"\n                                label={{ value: viewMode === 'years' ? 'Ano' : 'Período', position: 'insideBottom', offset: -10 }}\n                                tick={{ fontSize: 12 }}\n                            />\n                            <YAxis\n                                label={{ value: getYAxisLabel(), angle: -90, position: 'insideLeft' }}\n                                tickFormatter={(value) => `${(value / 1000).toFixed(0)}k`}\n                                tick={{ fontSize: 12 }}\n                            />\n                            <Tooltip\n                                formatter={(value: any) => [formatCurrency(value), getLegendName('').split(' - ')[1] || 'Valor']}\n                                labelFormatter={(label) => viewMode === 'years' ? `Ano ${label}` : `Período ${label}`}\n                                contentStyle={{\n                                    backgroundColor: 'white',\n                                    border: '1px solid #e5e7eb',\n                                    borderRadius: '8px',\n                                    boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n                                }}\n                            />\n                            <Legend />\n                            {selectedBanks.map((bank, index) => (\n                                <Line\n                                    key={getDataKey(bank)}\n                                    type=\"monotone\"\n                                    dataKey={getDataKey(bank)}\n                                    name={getLegendName(bank)}\n                                    stroke={colors[index % colors.length]}\n                                    strokeWidth={3}\n                                    dot={{ r: 5, strokeWidth: 2 }}\n                                    activeDot={{ r: 8 }}\n                                />\n                            ))}\n                        </LineChart>\n                    </ResponsiveContainer>\n                ) : (\n                    <div className=\"flex items-center justify-center h-64 text-gray-500\">\n                        <div className=\"text-center\">\n                            <BarChart3 className=\"h-12 w-12 mx-auto mb-4 text-gray-300\" />\n                            <p className=\"text-lg font-medium\">Nenhum dado disponível</p>\n                            <p className=\"text-sm\">Selecione bancos e filtros para visualizar os dados</p>\n                        </div>\n                    </div>\n                )}\n            </div>\n\n            {/* Summary Cards */}\n            {chartData.length > 0 && (\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                    {selectedBanks.map((bank, index) => {\n                        const latestData = chartData[chartData.length - 1];\n                        const value = latestData?.[getDataKey(bank)] || 0;\n\n                        return (\n                            <div key={bank} className=\"card\">\n                                <div className=\"flex items-center justify-between\">\n                                    <div>\n                                        <p className=\"text-sm font-medium text-gray-600\">{bank}</p>\n                                        <p className=\"text-2xl font-bold text-gray-900\">{formatCurrency(value)}</p>\n                                    </div>\n                                    <div\n                                        className=\"w-3 h-3 rounded-full\"\n                                        style={{ backgroundColor: colors[index % colors.length] }}\n                                    />\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            )}\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}