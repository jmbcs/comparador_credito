{"ast":null,"code":"var _jsxFileName = \"/home/julio/Desktop/credito/src/components/DebtMapBarChart.tsx\";\nimport React from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DebtMapBarChart = ({\n  data,\n  selectedBanks\n}) => {\n  // Filter data for selected banks and only show yearly data\n  const yearlyData = data.filter(entry => selectedBanks.includes(entry.Banco) && entry.Mês % 12 === 0).map(entry => ({\n    ...entry,\n    Ano: entry.Ano\n  }));\n\n  // Group by year and bank\n  const chartData = [];\n  const years = Array.from(new Set(yearlyData.map(d => d.Ano))).sort((a, b) => a - b);\n  years.forEach(year => {\n    const yearData = {\n      Ano: year\n    };\n    selectedBanks.forEach(bank => {\n      const bankData = yearlyData.find(d => d.Banco === bank && d.Ano === year);\n      if (bankData) {\n        yearData[`${bank}_Capital`] = bankData[\"Capital em Dívida (€)\"];\n        yearData[`${bank}_Comissoes`] = bankData[\"Comissões Acumuladas (€)\"];\n      }\n    });\n    chartData.push(yearData);\n  });\n  const colors = ['#3b82f6', '#ef4444', '#10b981', '#f59e0b', '#8b5cf6', '#06b6d4', '#84cc16', '#f97316'];\n  const formatCurrency = value => {\n    if (typeof value === 'number') {\n      return new Intl.NumberFormat('pt-PT', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(value);\n    }\n    return value;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl border border-gray-200 p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-900 mb-6 flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl\",\n          children: \"\\uD83D\\uDCCA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Capital em D\\xEDvida por Ano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: chartData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#e5e7eb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"Ano\",\n            label: {\n              value: 'Ano',\n              position: 'insideBottom',\n              offset: -10\n            },\n            tick: {\n              fontSize: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            label: {\n              value: 'Capital em Dívida (€)',\n              angle: -90,\n              position: 'insideLeft'\n            },\n            tickFormatter: value => `${(value / 1000).toFixed(0)}k`,\n            tick: {\n              fontSize: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => [formatCurrency(value), 'Capital em Dívida'],\n            labelFormatter: label => `Ano ${label}`,\n            contentStyle: {\n              backgroundColor: 'white',\n              border: '1px solid #e5e7eb',\n              borderRadius: '8px',\n              boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), selectedBanks.map((bank, index) => /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: `${bank}_Capital`,\n            name: `${bank}`,\n            fill: colors[index % colors.length],\n            radius: [4, 4, 0, 0]\n          }, `${bank}_Capital`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl border border-gray-200 p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-900 mb-6 flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl\",\n          children: \"\\uD83D\\uDCC8\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Comiss\\xF5es Acumuladas por Ano\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: chartData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#e5e7eb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"Ano\",\n            label: {\n              value: 'Ano',\n              position: 'insideBottom',\n              offset: -10\n            },\n            tick: {\n              fontSize: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            label: {\n              value: 'Comissões Acumuladas (€)',\n              angle: -90,\n              position: 'insideLeft'\n            },\n            tickFormatter: value => `${(value / 1000).toFixed(0)}k`,\n            tick: {\n              fontSize: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => [formatCurrency(value), 'Comissões Acumuladas'],\n            labelFormatter: label => `Ano ${label}`,\n            contentStyle: {\n              backgroundColor: 'white',\n              border: '1px solid #e5e7eb',\n              borderRadius: '8px',\n              boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this), selectedBanks.map((bank, index) => /*#__PURE__*/_jsxDEV(Bar, {\n            dataKey: `${bank}_Comissoes`,\n            name: `${bank}`,\n            fill: colors[index % colors.length],\n            radius: [4, 4, 0, 0]\n          }, `${bank}_Comissoes`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-xl border border-gray-200 p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-900 mb-6 flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-2xl\",\n          children: \"\\u2696\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Compara\\xE7\\xE3o Anual: Capital vs Comiss\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: chartData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#e5e7eb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"Ano\",\n            label: {\n              value: 'Ano',\n              position: 'insideBottom',\n              offset: -10\n            },\n            tick: {\n              fontSize: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            label: {\n              value: 'Valor (€)',\n              angle: -90,\n              position: 'insideLeft'\n            },\n            tickFormatter: value => `${(value / 1000).toFixed(0)}k`,\n            tick: {\n              fontSize: 12\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: (value, name) => [formatCurrency(value), name.includes('Capital') ? 'Capital em Dívida' : 'Comissões Acumuladas'],\n            labelFormatter: label => `Ano ${label}`,\n            contentStyle: {\n              backgroundColor: 'white',\n              border: '1px solid #e5e7eb',\n              borderRadius: '8px',\n              boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 25\n          }, this), selectedBanks.map((bank, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: `${bank}_Capital`,\n              name: `${bank} - Capital`,\n              fill: colors[index % colors.length],\n              radius: [4, 4, 0, 0],\n              opacity: 0.8\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              dataKey: `${bank}_Comissoes`,\n              name: `${bank} - Comissões`,\n              fill: colors[(index + 4) % colors.length],\n              radius: [4, 4, 0, 0],\n              opacity: 0.6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 33\n            }, this)]\n          }, bank, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_c = DebtMapBarChart;\nvar _c;\n$RefreshReg$(_c, \"DebtMapBarChart\");","map":{"version":3,"names":["React","Bar","BarChart","CartesianGrid","Legend","ResponsiveContainer","Tooltip","XAxis","YAxis","jsxDEV","_jsxDEV","DebtMapBarChart","data","selectedBanks","yearlyData","filter","entry","includes","Banco","Mês","map","Ano","chartData","years","Array","from","Set","d","sort","a","b","forEach","year","yearData","bank","bankData","find","push","colors","formatCurrency","value","Intl","NumberFormat","style","currency","format","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","label","position","offset","tick","fontSize","angle","tickFormatter","toFixed","formatter","labelFormatter","contentStyle","backgroundColor","border","borderRadius","boxShadow","index","name","fill","length","radius","Fragment","opacity","_c","$RefreshReg$"],"sources":["/home/julio/Desktop/credito/src/components/DebtMapBarChart.tsx"],"sourcesContent":["import React from 'react';\nimport { Bar, BarChart, CartesianGrid, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { DebtMapEntry } from '../types';\n\ninterface DebtMapBarChartProps {\n    data: DebtMapEntry[];\n    selectedBanks: string[];\n}\n\nexport const DebtMapBarChart: React.FC<DebtMapBarChartProps> = ({ data, selectedBanks }) => {\n    // Filter data for selected banks and only show yearly data\n    const yearlyData = data\n        .filter(entry => selectedBanks.includes(entry.Banco) && entry.Mês % 12 === 0)\n        .map(entry => ({\n            ...entry,\n            Ano: entry.Ano\n        }));\n\n    // Group by year and bank\n    const chartData: any[] = [];\n    const years = Array.from(new Set(yearlyData.map(d => d.Ano))).sort((a: number, b: number) => a - b);\n\n    years.forEach(year => {\n        const yearData: any = { Ano: year };\n        selectedBanks.forEach(bank => {\n            const bankData = yearlyData.find(d => d.Banco === bank && d.Ano === year);\n            if (bankData) {\n                yearData[`${bank}_Capital`] = bankData[\"Capital em Dívida (€)\"];\n                yearData[`${bank}_Comissoes`] = bankData[\"Comissões Acumuladas (€)\"];\n            }\n        });\n        chartData.push(yearData);\n    });\n\n    const colors = ['#3b82f6', '#ef4444', '#10b981', '#f59e0b', '#8b5cf6', '#06b6d4', '#84cc16', '#f97316'];\n\n    const formatCurrency = (value: any) => {\n        if (typeof value === 'number') {\n            return new Intl.NumberFormat('pt-PT', {\n                style: 'currency',\n                currency: 'EUR'\n            }).format(value);\n        }\n        return value;\n    };\n\n    return (\n        <div className=\"space-y-8\">\n            {/* Capital em Dívida Bar Chart */}\n            <div className=\"bg-white rounded-xl border border-gray-200 p-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-6 flex items-center space-x-2\">\n                    <span className=\"text-2xl\">📊</span>\n                    <span>Capital em Dívida por Ano</span>\n                </h3>\n                <ResponsiveContainer width=\"100%\" height={400}>\n                    <BarChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" />\n                        <XAxis\n                            dataKey=\"Ano\"\n                            label={{ value: 'Ano', position: 'insideBottom', offset: -10 }}\n                            tick={{ fontSize: 12 }}\n                        />\n                        <YAxis\n                            label={{ value: 'Capital em Dívida (€)', angle: -90, position: 'insideLeft' }}\n                            tickFormatter={(value) => `${(value / 1000).toFixed(0)}k`}\n                            tick={{ fontSize: 12 }}\n                        />\n                        <Tooltip\n                            formatter={(value: any) => [formatCurrency(value), 'Capital em Dívida']}\n                            labelFormatter={(label) => `Ano ${label}`}\n                            contentStyle={{\n                                backgroundColor: 'white',\n                                border: '1px solid #e5e7eb',\n                                borderRadius: '8px',\n                                boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n                            }}\n                        />\n                        <Legend />\n                        {selectedBanks.map((bank, index) => (\n                            <Bar\n                                key={`${bank}_Capital`}\n                                dataKey={`${bank}_Capital`}\n                                name={`${bank}`}\n                                fill={colors[index % colors.length]}\n                                radius={[4, 4, 0, 0]}\n                            />\n                        ))}\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>\n\n            {/* Comissões Acumuladas Bar Chart */}\n            <div className=\"bg-white rounded-xl border border-gray-200 p-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-6 flex items-center space-x-2\">\n                    <span className=\"text-2xl\">📈</span>\n                    <span>Comissões Acumuladas por Ano</span>\n                </h3>\n                <ResponsiveContainer width=\"100%\" height={400}>\n                    <BarChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" />\n                        <XAxis\n                            dataKey=\"Ano\"\n                            label={{ value: 'Ano', position: 'insideBottom', offset: -10 }}\n                            tick={{ fontSize: 12 }}\n                        />\n                        <YAxis\n                            label={{ value: 'Comissões Acumuladas (€)', angle: -90, position: 'insideLeft' }}\n                            tickFormatter={(value) => `${(value / 1000).toFixed(0)}k`}\n                            tick={{ fontSize: 12 }}\n                        />\n                        <Tooltip\n                            formatter={(value: any) => [formatCurrency(value), 'Comissões Acumuladas']}\n                            labelFormatter={(label) => `Ano ${label}`}\n                            contentStyle={{\n                                backgroundColor: 'white',\n                                border: '1px solid #e5e7eb',\n                                borderRadius: '8px',\n                                boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n                            }}\n                        />\n                        <Legend />\n                        {selectedBanks.map((bank, index) => (\n                            <Bar\n                                key={`${bank}_Comissoes`}\n                                dataKey={`${bank}_Comissoes`}\n                                name={`${bank}`}\n                                fill={colors[index % colors.length]}\n                                radius={[4, 4, 0, 0]}\n                            />\n                        ))}\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>\n\n            {/* Comparação Anual - Capital vs Comissões */}\n            <div className=\"bg-white rounded-xl border border-gray-200 p-6\">\n                <h3 className=\"text-xl font-semibold text-gray-900 mb-6 flex items-center space-x-2\">\n                    <span className=\"text-2xl\">⚖️</span>\n                    <span>Comparação Anual: Capital vs Comissões</span>\n                </h3>\n                <ResponsiveContainer width=\"100%\" height={400}>\n                    <BarChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" />\n                        <XAxis\n                            dataKey=\"Ano\"\n                            label={{ value: 'Ano', position: 'insideBottom', offset: -10 }}\n                            tick={{ fontSize: 12 }}\n                        />\n                        <YAxis\n                            label={{ value: 'Valor (€)', angle: -90, position: 'insideLeft' }}\n                            tickFormatter={(value) => `${(value / 1000).toFixed(0)}k`}\n                            tick={{ fontSize: 12 }}\n                        />\n                        <Tooltip\n                            formatter={(value: any, name: any) => [\n                                formatCurrency(value),\n                                name.includes('Capital') ? 'Capital em Dívida' : 'Comissões Acumuladas'\n                            ]}\n                            labelFormatter={(label) => `Ano ${label}`}\n                            contentStyle={{\n                                backgroundColor: 'white',\n                                border: '1px solid #e5e7eb',\n                                borderRadius: '8px',\n                                boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1)'\n                            }}\n                        />\n                        <Legend />\n                        {selectedBanks.map((bank, index) => (\n                            <React.Fragment key={bank}>\n                                <Bar\n                                    dataKey={`${bank}_Capital`}\n                                    name={`${bank} - Capital`}\n                                    fill={colors[index % colors.length]}\n                                    radius={[4, 4, 0, 0]}\n                                    opacity={0.8}\n                                />\n                                <Bar\n                                    dataKey={`${bank}_Comissoes`}\n                                    name={`${bank} - Comissões`}\n                                    fill={colors[(index + 4) % colors.length]}\n                                    radius={[4, 4, 0, 0]}\n                                    opacity={0.6}\n                                />\n                            </React.Fragment>\n                        ))}\n                    </BarChart>\n                </ResponsiveContainer>\n            </div>\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}