{"ast":null,"code":"import React from'react';import{CartesianGrid,Legend,Line,LineChart,ResponsiveContainer,Tooltip,XAxis,YAxis}from'recharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const DebtMapChart=_ref=>{let{data,selectedBanks}=_ref;// Filter data for selected banks and only show yearly data\nconst yearlyData=data.filter(entry=>selectedBanks.includes(entry.Banco)&&entry.Mês%12===0).map(entry=>({...entry,Ano:entry.Ano}));// Group by year and bank\nconst chartData=[];const years=Array.from(new Set(yearlyData.map(d=>d.Ano))).sort((a,b)=>a-b);years.forEach(year=>{const yearData={Ano:year};selectedBanks.forEach(bank=>{const bankData=yearlyData.find(d=>d.Banco===bank&&d.Ano===year);if(bankData){yearData[`${bank}_Capital`]=bankData[\"Capital em Dívida (€)\"];yearData[`${bank}_Comissoes`]=bankData[\"Comissões Acumuladas (€)\"];}});chartData.push(yearData);});const colors=['#3b82f6','#ef4444','#10b981','#f59e0b','#8b5cf6','#06b6d4','#84cc16','#f97316'];const formatCurrency=value=>{if(typeof value==='number'){return new Intl.NumberFormat('pt-PT',{style:'currency',currency:'EUR'}).format(value);}return value;};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white/80 rounded-xl p-6 border border-blue-200 shadow-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-2 bg-blue-500 rounded-lg\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"h-5 w-5 text-white\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"})})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-blue-900\",children:\"Evolu\\xE7\\xE3o do Capital em D\\xEDvida\"})]}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:400,children:/*#__PURE__*/_jsxs(LineChart,{data:chartData,margin:{top:20,right:30,left:20,bottom:20},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"#e5e7eb\",opacity:0.6}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"Ano\",label:{value:'Ano',position:'insideBottom',offset:-10,style:{fontSize:14,fontWeight:600}},tick:{fontSize:12,fill:'#6b7280'},axisLine:{stroke:'#d1d5db'}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Capital em Dívida (€)',angle:-90,position:'insideLeft',style:{fontSize:14,fontWeight:600}},tickFormatter:value=>`${(value/1000).toFixed(0)}k`,tick:{fontSize:12,fill:'#6b7280'},axisLine:{stroke:'#d1d5db'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[formatCurrency(value),'Capital em Dívida'],labelFormatter:label=>`Ano ${label}`,contentStyle:{backgroundColor:'white',border:'1px solid #e5e7eb',borderRadius:'12px',boxShadow:'0 10px 25px -5px rgba(0, 0, 0, 0.1)',padding:'12px'}}),/*#__PURE__*/_jsx(Legend,{wrapperStyle:{paddingTop:'20px'},iconType:\"circle\",iconSize:8}),selectedBanks.map((bank,index)=>/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:`${bank}_Capital`,name:bank,stroke:colors[index%colors.length],strokeWidth:3,dot:{r:6,strokeWidth:2,fill:'white'},activeDot:{r:8,strokeWidth:3}},`${bank}_Capital`))]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white/80 rounded-xl p-6 border border-green-200 shadow-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-3 mb-6\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"p-2 bg-green-500 rounded-lg\",children:/*#__PURE__*/_jsx(\"svg\",{className:\"h-5 w-5 text-white\",fill:\"none\",stroke:\"currentColor\",viewBox:\"0 0 24 24\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:2,d:\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\"})})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-bold text-green-900\",children:\"Evolu\\xE7\\xE3o das Comiss\\xF5es Acumuladas\"})]}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:400,children:/*#__PURE__*/_jsxs(LineChart,{data:chartData,margin:{top:20,right:30,left:20,bottom:20},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"#e5e7eb\",opacity:0.6}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"Ano\",label:{value:'Ano',position:'insideBottom',offset:-10,style:{fontSize:14,fontWeight:600}},tick:{fontSize:12,fill:'#6b7280'},axisLine:{stroke:'#d1d5db'}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Comissões Acumuladas (€)',angle:-90,position:'insideLeft',style:{fontSize:14,fontWeight:600}},tickFormatter:value=>`${(value/1000).toFixed(0)}k`,tick:{fontSize:12,fill:'#6b7280'},axisLine:{stroke:'#d1d5db'}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[formatCurrency(value),'Comissões Acumuladas'],labelFormatter:label=>`Ano ${label}`,contentStyle:{backgroundColor:'white',border:'1px solid #e5e7eb',borderRadius:'12px',boxShadow:'0 10px 25px -5px rgba(0, 0, 0, 0.1)',padding:'12px'}}),/*#__PURE__*/_jsx(Legend,{wrapperStyle:{paddingTop:'20px'},iconType:\"circle\",iconSize:8}),selectedBanks.map((bank,index)=>/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:`${bank}_Comissoes`,name:bank,stroke:colors[index%colors.length],strokeWidth:3,dot:{r:6,strokeWidth:2,fill:'white'},activeDot:{r:8,strokeWidth:3}},`${bank}_Comissoes`))]})})]})]});};","map":{"version":3,"names":["React","CartesianGrid","Legend","Line","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","jsx","_jsx","jsxs","_jsxs","DebtMapChart","_ref","data","selectedBanks","yearlyData","filter","entry","includes","Banco","Mês","map","Ano","chartData","years","Array","from","Set","d","sort","a","b","forEach","year","yearData","bank","bankData","find","push","colors","formatCurrency","value","Intl","NumberFormat","style","currency","format","className","children","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","width","height","margin","top","right","left","bottom","strokeDasharray","opacity","dataKey","label","position","offset","fontSize","fontWeight","tick","axisLine","angle","tickFormatter","toFixed","formatter","labelFormatter","contentStyle","backgroundColor","border","borderRadius","boxShadow","padding","wrapperStyle","paddingTop","iconType","iconSize","index","type","name","length","dot","r","activeDot"],"sources":["/home/julio/github/jmbcs/comparador_credito/src/components/DebtMapChart.tsx"],"sourcesContent":["import React from 'react';\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { DebtMapEntry } from '../types';\n\ninterface DebtMapChartProps {\n    data: DebtMapEntry[];\n    selectedBanks: string[];\n}\n\nexport const DebtMapChart: React.FC<DebtMapChartProps> = ({ data, selectedBanks }) => {\n    // Filter data for selected banks and only show yearly data\n    const yearlyData = data\n        .filter(entry => selectedBanks.includes(entry.Banco) && entry.Mês % 12 === 0)\n        .map(entry => ({\n            ...entry,\n            Ano: entry.Ano\n        }));\n\n    // Group by year and bank\n    const chartData: any[] = [];\n    const years = Array.from(new Set(yearlyData.map(d => d.Ano))).sort((a: number, b: number) => a - b);\n\n    years.forEach(year => {\n        const yearData: any = { Ano: year };\n        selectedBanks.forEach(bank => {\n            const bankData = yearlyData.find(d => d.Banco === bank && d.Ano === year);\n            if (bankData) {\n                yearData[`${bank}_Capital`] = bankData[\"Capital em Dívida (€)\"];\n                yearData[`${bank}_Comissoes`] = bankData[\"Comissões Acumuladas (€)\"];\n            }\n        });\n        chartData.push(yearData);\n    });\n\n    const colors = ['#3b82f6', '#ef4444', '#10b981', '#f59e0b', '#8b5cf6', '#06b6d4', '#84cc16', '#f97316'];\n\n    const formatCurrency = (value: any) => {\n        if (typeof value === 'number') {\n            return new Intl.NumberFormat('pt-PT', {\n                style: 'currency',\n                currency: 'EUR'\n            }).format(value);\n        }\n        return value;\n    };\n\n    return (\n        <div className=\"space-y-8\">\n            {/* Capital em Dívida Chart */}\n            <div className=\"bg-white/80 rounded-xl p-6 border border-blue-200 shadow-sm\">\n                <div className=\"flex items-center space-x-3 mb-6\">\n                    <div className=\"p-2 bg-blue-500 rounded-lg\">\n                        <svg className=\"h-5 w-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                        </svg>\n                    </div>\n                    <h3 className=\"text-xl font-bold text-blue-900\">Evolução do Capital em Dívida</h3>\n                </div>\n                <ResponsiveContainer width=\"100%\" height={400}>\n                    <LineChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" opacity={0.6} />\n                        <XAxis\n                            dataKey=\"Ano\"\n                            label={{ value: 'Ano', position: 'insideBottom', offset: -10, style: { fontSize: 14, fontWeight: 600 } }}\n                            tick={{ fontSize: 12, fill: '#6b7280' }}\n                            axisLine={{ stroke: '#d1d5db' }}\n                        />\n                        <YAxis\n                            label={{ value: 'Capital em Dívida (€)', angle: -90, position: 'insideLeft', style: { fontSize: 14, fontWeight: 600 } }}\n                            tickFormatter={(value) => `${(value / 1000).toFixed(0)}k`}\n                            tick={{ fontSize: 12, fill: '#6b7280' }}\n                            axisLine={{ stroke: '#d1d5db' }}\n                        />\n                        <Tooltip\n                            formatter={(value: any) => [formatCurrency(value), 'Capital em Dívida']}\n                            labelFormatter={(label) => `Ano ${label}`}\n                            contentStyle={{\n                                backgroundColor: 'white',\n                                border: '1px solid #e5e7eb',\n                                borderRadius: '12px',\n                                boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.1)',\n                                padding: '12px'\n                            }}\n                        />\n                        <Legend\n                            wrapperStyle={{ paddingTop: '20px' }}\n                            iconType=\"circle\"\n                            iconSize={8}\n                        />\n                        {selectedBanks.map((bank, index) => (\n                            <Line\n                                key={`${bank}_Capital`}\n                                type=\"monotone\"\n                                dataKey={`${bank}_Capital`}\n                                name={bank}\n                                stroke={colors[index % colors.length]}\n                                strokeWidth={3}\n                                dot={{ r: 6, strokeWidth: 2, fill: 'white' }}\n                                activeDot={{ r: 8, strokeWidth: 3 }}\n                            />\n                        ))}\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n\n            {/* Comissões Acumuladas Chart */}\n            <div className=\"bg-white/80 rounded-xl p-6 border border-green-200 shadow-sm\">\n                <div className=\"flex items-center space-x-3 mb-6\">\n                    <div className=\"p-2 bg-green-500 rounded-lg\">\n                        <svg className=\"h-5 w-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                        </svg>\n                    </div>\n                    <h3 className=\"text-xl font-bold text-green-900\">Evolução das Comissões Acumuladas</h3>\n                </div>\n                <ResponsiveContainer width=\"100%\" height={400}>\n                    <LineChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" opacity={0.6} />\n                        <XAxis\n                            dataKey=\"Ano\"\n                            label={{ value: 'Ano', position: 'insideBottom', offset: -10, style: { fontSize: 14, fontWeight: 600 } }}\n                            tick={{ fontSize: 12, fill: '#6b7280' }}\n                            axisLine={{ stroke: '#d1d5db' }}\n                        />\n                        <YAxis\n                            label={{ value: 'Comissões Acumuladas (€)', angle: -90, position: 'insideLeft', style: { fontSize: 14, fontWeight: 600 } }}\n                            tickFormatter={(value) => `${(value / 1000).toFixed(0)}k`}\n                            tick={{ fontSize: 12, fill: '#6b7280' }}\n                            axisLine={{ stroke: '#d1d5db' }}\n                        />\n                        <Tooltip\n                            formatter={(value: any) => [formatCurrency(value), 'Comissões Acumuladas']}\n                            labelFormatter={(label) => `Ano ${label}`}\n                            contentStyle={{\n                                backgroundColor: 'white',\n                                border: '1px solid #e5e7eb',\n                                borderRadius: '12px',\n                                boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.1)',\n                                padding: '12px'\n                            }}\n                        />\n                        <Legend\n                            wrapperStyle={{ paddingTop: '20px' }}\n                            iconType=\"circle\"\n                            iconSize={8}\n                        />\n                        {selectedBanks.map((bank, index) => (\n                            <Line\n                                key={`${bank}_Comissoes`}\n                                type=\"monotone\"\n                                dataKey={`${bank}_Comissoes`}\n                                name={bank}\n                                stroke={colors[index % colors.length]}\n                                strokeWidth={3}\n                                dot={{ r: 6, strokeWidth: 2, fill: 'white' }}\n                                activeDot={{ r: 8, strokeWidth: 3 }}\n                            />\n                        ))}\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}