{"ast":null,"code":"var _jsxFileName = \"/home/julio/github/jmbcs/comparador_credito/src/components/DebtMapChart.tsx\";\nimport React from 'react';\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const DebtMapChart = ({\n  data,\n  selectedBanks\n}) => {\n  // Filter data for selected banks and only show yearly data\n  const yearlyData = data.filter(entry => selectedBanks.includes(entry.Banco) && entry.Mês % 12 === 0).map(entry => ({\n    ...entry,\n    Ano: entry.Ano\n  }));\n\n  // Group by year and bank\n  const chartData = [];\n  const years = Array.from(new Set(yearlyData.map(d => d.Ano))).sort((a, b) => a - b);\n  years.forEach(year => {\n    const yearData = {\n      Ano: year\n    };\n    selectedBanks.forEach(bank => {\n      const bankData = yearlyData.find(d => d.Banco === bank && d.Ano === year);\n      if (bankData) {\n        yearData[`${bank}_Capital`] = bankData[\"Capital em Dívida (€)\"];\n        yearData[`${bank}_Comissoes`] = bankData[\"Comissões Acumuladas (€)\"];\n        yearData[`${bank}_Juros`] = bankData[\"Juros (€)\"];\n      }\n    });\n    chartData.push(yearData);\n  });\n\n  // Calculate cumulative juros for each bank\n  const cumulativeJurosData = chartData.map((yearData, index) => {\n    const cumulativeData = {\n      Ano: yearData.Ano\n    };\n    selectedBanks.forEach(bank => {\n      let cumulativeJuros = 0;\n      for (let i = 0; i <= index; i++) {\n        const jurosAno = chartData[i][`${bank}_Juros`] || 0;\n        cumulativeJuros += jurosAno;\n      }\n      cumulativeData[`${bank}_JurosAcumulados`] = cumulativeJuros;\n    });\n    return cumulativeData;\n  });\n  const colors = ['#3b82f6', '#ef4444', '#10b981', '#f59e0b', '#8b5cf6', '#06b6d4', '#84cc16', '#f97316'];\n  const formatCurrency = value => {\n    if (typeof value === 'number') {\n      return new Intl.NumberFormat('pt-PT', {\n        style: 'currency',\n        currency: 'EUR'\n      }).format(value);\n    }\n    return value;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white/80 rounded-xl p-6 border border-blue-200 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 bg-blue-500 rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-5 w-5 text-white\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-blue-900\",\n          children: \"Evolu\\xE7\\xE3o do Capital em D\\xEDvida\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#e5e7eb\",\n            opacity: 0.6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"Ano\",\n            label: {\n              value: 'Ano',\n              position: 'insideBottom',\n              offset: -10,\n              style: {\n                fontSize: 14,\n                fontWeight: 600\n              }\n            },\n            tick: {\n              fontSize: 12,\n              fill: '#6b7280'\n            },\n            axisLine: {\n              stroke: '#d1d5db'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            label: {\n              value: 'Capital em Dívida (€)',\n              angle: -90,\n              position: 'insideLeft',\n              style: {\n                fontSize: 14,\n                fontWeight: 600\n              }\n            },\n            tickFormatter: value => `${(value / 1000).toFixed(0)}k`,\n            tick: {\n              fontSize: 12,\n              fill: '#6b7280'\n            },\n            axisLine: {\n              stroke: '#d1d5db'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => [formatCurrency(value), 'Capital em Dívida'],\n            labelFormatter: label => `Ano ${label}`,\n            contentStyle: {\n              backgroundColor: 'white',\n              border: '1px solid #e5e7eb',\n              borderRadius: '12px',\n              boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.1)',\n              padding: '12px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            wrapperStyle: {\n              paddingTop: '20px'\n            },\n            iconType: \"circle\",\n            iconSize: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this), selectedBanks.map((bank, index) => /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: `${bank}_Capital`,\n            name: bank,\n            stroke: colors[index % colors.length],\n            strokeWidth: 3,\n            dot: {\n              r: 6,\n              strokeWidth: 2,\n              fill: 'white'\n            },\n            activeDot: {\n              r: 8,\n              strokeWidth: 3\n            }\n          }, `${bank}_Capital`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white/80 rounded-xl p-6 border border-green-200 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 bg-green-500 rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-5 w-5 text-white\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-green-900\",\n          children: \"Evolu\\xE7\\xE3o das Comiss\\xF5es Acumuladas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: chartData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#e5e7eb\",\n            opacity: 0.6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"Ano\",\n            label: {\n              value: 'Ano',\n              position: 'insideBottom',\n              offset: -10,\n              style: {\n                fontSize: 14,\n                fontWeight: 600\n              }\n            },\n            tick: {\n              fontSize: 12,\n              fill: '#6b7280'\n            },\n            axisLine: {\n              stroke: '#d1d5db'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            label: {\n              value: 'Comissões Acumuladas (€)',\n              angle: -90,\n              position: 'insideLeft',\n              style: {\n                fontSize: 14,\n                fontWeight: 600\n              }\n            },\n            tickFormatter: value => `${(value / 1000).toFixed(0)}k`,\n            tick: {\n              fontSize: 12,\n              fill: '#6b7280'\n            },\n            axisLine: {\n              stroke: '#d1d5db'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => [formatCurrency(value), 'Comissões Acumuladas'],\n            labelFormatter: label => `Ano ${label}`,\n            contentStyle: {\n              backgroundColor: 'white',\n              border: '1px solid #e5e7eb',\n              borderRadius: '12px',\n              boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.1)',\n              padding: '12px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            wrapperStyle: {\n              paddingTop: '20px'\n            },\n            iconType: \"circle\",\n            iconSize: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), selectedBanks.map((bank, index) => /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: `${bank}_Comissoes`,\n            name: bank,\n            stroke: colors[index % colors.length],\n            strokeWidth: 3,\n            dot: {\n              r: 6,\n              strokeWidth: 2,\n              fill: 'white'\n            },\n            activeDot: {\n              r: 8,\n              strokeWidth: 3\n            }\n          }, `${bank}_Comissoes`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white/80 rounded-xl p-6 border border-purple-200 shadow-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-3 mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-2 bg-purple-500 rounded-lg\",\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: \"h-5 w-5 text-white\",\n            fill: \"none\",\n            stroke: \"currentColor\",\n            viewBox: \"0 0 24 24\",\n            children: /*#__PURE__*/_jsxDEV(\"path\", {\n              strokeLinecap: \"round\",\n              strokeLinejoin: \"round\",\n              strokeWidth: 2,\n              d: \"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold text-purple-900\",\n          children: \"Evolu\\xE7\\xE3o dos Juros Acumulados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: 400,\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: cumulativeJurosData,\n          margin: {\n            top: 20,\n            right: 30,\n            left: 20,\n            bottom: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\",\n            stroke: \"#e5e7eb\",\n            opacity: 0.6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"Ano\",\n            label: {\n              value: 'Ano',\n              position: 'insideBottom',\n              offset: -10,\n              style: {\n                fontSize: 14,\n                fontWeight: 600\n              }\n            },\n            tick: {\n              fontSize: 12,\n              fill: '#6b7280'\n            },\n            axisLine: {\n              stroke: '#d1d5db'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n            label: {\n              value: 'Juros Acumulados (€)',\n              angle: -90,\n              position: 'insideLeft',\n              style: {\n                fontSize: 14,\n                fontWeight: 600\n              }\n            },\n            tickFormatter: value => `${(value / 1000).toFixed(0)}k`,\n            tick: {\n              fontSize: 12,\n              fill: '#6b7280'\n            },\n            axisLine: {\n              stroke: '#d1d5db'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            formatter: value => [formatCurrency(value), 'Juros Acumulados'],\n            labelFormatter: label => `Ano ${label}`,\n            contentStyle: {\n              backgroundColor: 'white',\n              border: '1px solid #e5e7eb',\n              borderRadius: '12px',\n              boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.1)',\n              padding: '12px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {\n            wrapperStyle: {\n              paddingTop: '20px'\n            },\n            iconType: \"circle\",\n            iconSize: 8\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), selectedBanks.map((bank, index) => /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: `${bank}_JurosAcumulados`,\n            name: bank,\n            stroke: colors[index % colors.length],\n            strokeWidth: 3,\n            dot: {\n              r: 6,\n              strokeWidth: 2,\n              fill: 'white'\n            },\n            activeDot: {\n              r: 8,\n              strokeWidth: 3\n            }\n          }, `${bank}_JurosAcumulados`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_c = DebtMapChart;\nvar _c;\n$RefreshReg$(_c, \"DebtMapChart\");","map":{"version":3,"names":["React","CartesianGrid","Legend","Line","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","jsxDEV","_jsxDEV","DebtMapChart","data","selectedBanks","yearlyData","filter","entry","includes","Banco","Mês","map","Ano","chartData","years","Array","from","Set","d","sort","a","b","forEach","year","yearData","bank","bankData","find","push","cumulativeJurosData","index","cumulativeData","cumulativeJuros","i","jurosAno","colors","formatCurrency","value","Intl","NumberFormat","style","currency","format","className","children","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","width","height","margin","top","right","left","bottom","strokeDasharray","opacity","dataKey","label","position","offset","fontSize","fontWeight","tick","axisLine","angle","tickFormatter","toFixed","formatter","labelFormatter","contentStyle","backgroundColor","border","borderRadius","boxShadow","padding","wrapperStyle","paddingTop","iconType","iconSize","type","name","length","dot","r","activeDot","_c","$RefreshReg$"],"sources":["/home/julio/github/jmbcs/comparador_credito/src/components/DebtMapChart.tsx"],"sourcesContent":["import React from 'react';\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { DebtMapEntry } from '../types';\n\ninterface DebtMapChartProps {\n    data: DebtMapEntry[];\n    selectedBanks: string[];\n}\n\nexport const DebtMapChart: React.FC<DebtMapChartProps> = ({ data, selectedBanks }) => {\n    // Filter data for selected banks and only show yearly data\n    const yearlyData = data\n        .filter(entry => selectedBanks.includes(entry.Banco) && entry.Mês % 12 === 0)\n        .map(entry => ({\n            ...entry,\n            Ano: entry.Ano\n        }));\n\n    // Group by year and bank\n    const chartData: any[] = [];\n    const years = Array.from(new Set(yearlyData.map(d => d.Ano))).sort((a: number, b: number) => a - b);\n\n    years.forEach(year => {\n        const yearData: any = { Ano: year };\n        selectedBanks.forEach(bank => {\n            const bankData = yearlyData.find(d => d.Banco === bank && d.Ano === year);\n            if (bankData) {\n                yearData[`${bank}_Capital`] = bankData[\"Capital em Dívida (€)\"];\n                yearData[`${bank}_Comissoes`] = bankData[\"Comissões Acumuladas (€)\"];\n                yearData[`${bank}_Juros`] = bankData[\"Juros (€)\"];\n            }\n        });\n        chartData.push(yearData);\n    });\n\n    // Calculate cumulative juros for each bank\n    const cumulativeJurosData = chartData.map((yearData, index) => {\n        const cumulativeData: any = { Ano: yearData.Ano };\n        selectedBanks.forEach(bank => {\n            let cumulativeJuros = 0;\n            for (let i = 0; i <= index; i++) {\n                const jurosAno = chartData[i][`${bank}_Juros`] || 0;\n                cumulativeJuros += jurosAno;\n            }\n            cumulativeData[`${bank}_JurosAcumulados`] = cumulativeJuros;\n        });\n        return cumulativeData;\n    });\n\n    const colors = ['#3b82f6', '#ef4444', '#10b981', '#f59e0b', '#8b5cf6', '#06b6d4', '#84cc16', '#f97316'];\n\n    const formatCurrency = (value: any) => {\n        if (typeof value === 'number') {\n            return new Intl.NumberFormat('pt-PT', {\n                style: 'currency',\n                currency: 'EUR'\n            }).format(value);\n        }\n        return value;\n    };\n\n    return (\n        <div className=\"space-y-8\">\n            {/* Capital em Dívida Chart */}\n            <div className=\"bg-white/80 rounded-xl p-6 border border-blue-200 shadow-sm\">\n                <div className=\"flex items-center space-x-3 mb-6\">\n                    <div className=\"p-2 bg-blue-500 rounded-lg\">\n                        <svg className=\"h-5 w-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z\" />\n                        </svg>\n                    </div>\n                    <h3 className=\"text-xl font-bold text-blue-900\">Evolução do Capital em Dívida</h3>\n                </div>\n                <ResponsiveContainer width=\"100%\" height={400}>\n                    <LineChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" opacity={0.6} />\n                        <XAxis\n                            dataKey=\"Ano\"\n                            label={{ value: 'Ano', position: 'insideBottom', offset: -10, style: { fontSize: 14, fontWeight: 600 } }}\n                            tick={{ fontSize: 12, fill: '#6b7280' }}\n                            axisLine={{ stroke: '#d1d5db' }}\n                        />\n                        <YAxis\n                            label={{ value: 'Capital em Dívida (€)', angle: -90, position: 'insideLeft', style: { fontSize: 14, fontWeight: 600 } }}\n                            tickFormatter={(value) => `${(value / 1000).toFixed(0)}k`}\n                            tick={{ fontSize: 12, fill: '#6b7280' }}\n                            axisLine={{ stroke: '#d1d5db' }}\n                        />\n                        <Tooltip\n                            formatter={(value: any) => [formatCurrency(value), 'Capital em Dívida']}\n                            labelFormatter={(label) => `Ano ${label}`}\n                            contentStyle={{\n                                backgroundColor: 'white',\n                                border: '1px solid #e5e7eb',\n                                borderRadius: '12px',\n                                boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.1)',\n                                padding: '12px'\n                            }}\n                        />\n                        <Legend\n                            wrapperStyle={{ paddingTop: '20px' }}\n                            iconType=\"circle\"\n                            iconSize={8}\n                        />\n                        {selectedBanks.map((bank, index) => (\n                            <Line\n                                key={`${bank}_Capital`}\n                                type=\"monotone\"\n                                dataKey={`${bank}_Capital`}\n                                name={bank}\n                                stroke={colors[index % colors.length]}\n                                strokeWidth={3}\n                                dot={{ r: 6, strokeWidth: 2, fill: 'white' }}\n                                activeDot={{ r: 8, strokeWidth: 3 }}\n                            />\n                        ))}\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n\n            {/* Comissões Acumuladas Chart */}\n            <div className=\"bg-white/80 rounded-xl p-6 border border-green-200 shadow-sm\">\n                <div className=\"flex items-center space-x-3 mb-6\">\n                    <div className=\"p-2 bg-green-500 rounded-lg\">\n                        <svg className=\"h-5 w-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 7h8m0 0v8m0-8l-8 8-4-4-6 6\" />\n                        </svg>\n                    </div>\n                    <h3 className=\"text-xl font-bold text-green-900\">Evolução das Comissões Acumuladas</h3>\n                </div>\n                <ResponsiveContainer width=\"100%\" height={400}>\n                    <LineChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" opacity={0.6} />\n                        <XAxis\n                            dataKey=\"Ano\"\n                            label={{ value: 'Ano', position: 'insideBottom', offset: -10, style: { fontSize: 14, fontWeight: 600 } }}\n                            tick={{ fontSize: 12, fill: '#6b7280' }}\n                            axisLine={{ stroke: '#d1d5db' }}\n                        />\n                        <YAxis\n                            label={{ value: 'Comissões Acumuladas (€)', angle: -90, position: 'insideLeft', style: { fontSize: 14, fontWeight: 600 } }}\n                            tickFormatter={(value) => `${(value / 1000).toFixed(0)}k`}\n                            tick={{ fontSize: 12, fill: '#6b7280' }}\n                            axisLine={{ stroke: '#d1d5db' }}\n                        />\n                        <Tooltip\n                            formatter={(value: any) => [formatCurrency(value), 'Comissões Acumuladas']}\n                            labelFormatter={(label) => `Ano ${label}`}\n                            contentStyle={{\n                                backgroundColor: 'white',\n                                border: '1px solid #e5e7eb',\n                                borderRadius: '12px',\n                                boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.1)',\n                                padding: '12px'\n                            }}\n                        />\n                        <Legend\n                            wrapperStyle={{ paddingTop: '20px' }}\n                            iconType=\"circle\"\n                            iconSize={8}\n                        />\n                        {selectedBanks.map((bank, index) => (\n                            <Line\n                                key={`${bank}_Comissoes`}\n                                type=\"monotone\"\n                                dataKey={`${bank}_Comissoes`}\n                                name={bank}\n                                stroke={colors[index % colors.length]}\n                                strokeWidth={3}\n                                dot={{ r: 6, strokeWidth: 2, fill: 'white' }}\n                                activeDot={{ r: 8, strokeWidth: 3 }}\n                            />\n                        ))}\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n\n            {/* Juros Acumulados Chart */}\n            <div className=\"bg-white/80 rounded-xl p-6 border border-purple-200 shadow-sm\">\n                <div className=\"flex items-center space-x-3 mb-6\">\n                    <div className=\"p-2 bg-purple-500 rounded-lg\">\n                        <svg className=\"h-5 w-5 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8c-1.657 0-3 .895-3 2s1.343 2 3 2 3 .895 3 2-1.343 2-3 2m0-8c1.11 0 2.08.402 2.599 1M12 8V7m0 1v8m0 0v1m0-1c-1.11 0-2.08-.402-2.599-1\" />\n                        </svg>\n                    </div>\n                    <h3 className=\"text-xl font-bold text-purple-900\">Evolução dos Juros Acumulados</h3>\n                </div>\n                <ResponsiveContainer width=\"100%\" height={400}>\n                    <LineChart data={cumulativeJurosData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" opacity={0.6} />\n                        <XAxis\n                            dataKey=\"Ano\"\n                            label={{ value: 'Ano', position: 'insideBottom', offset: -10, style: { fontSize: 14, fontWeight: 600 } }}\n                            tick={{ fontSize: 12, fill: '#6b7280' }}\n                            axisLine={{ stroke: '#d1d5db' }}\n                        />\n                        <YAxis\n                            label={{ value: 'Juros Acumulados (€)', angle: -90, position: 'insideLeft', style: { fontSize: 14, fontWeight: 600 } }}\n                            tickFormatter={(value) => `${(value / 1000).toFixed(0)}k`}\n                            tick={{ fontSize: 12, fill: '#6b7280' }}\n                            axisLine={{ stroke: '#d1d5db' }}\n                        />\n                        <Tooltip\n                            formatter={(value: any) => [formatCurrency(value), 'Juros Acumulados']}\n                            labelFormatter={(label) => `Ano ${label}`}\n                            contentStyle={{\n                                backgroundColor: 'white',\n                                border: '1px solid #e5e7eb',\n                                borderRadius: '12px',\n                                boxShadow: '0 10px 25px -5px rgba(0, 0, 0, 0.1)',\n                                padding: '12px'\n                            }}\n                        />\n                        <Legend\n                            wrapperStyle={{ paddingTop: '20px' }}\n                            iconType=\"circle\"\n                            iconSize={8}\n                        />\n                        {selectedBanks.map((bank, index) => (\n                            <Line\n                                key={`${bank}_JurosAcumulados`}\n                                type=\"monotone\"\n                                dataKey={`${bank}_JurosAcumulados`}\n                                name={bank}\n                                stroke={colors[index % colors.length]}\n                                strokeWidth={3}\n                                dot={{ r: 6, strokeWidth: 2, fill: 'white' }}\n                                activeDot={{ r: 8, strokeWidth: 3 }}\n                            />\n                        ))}\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}