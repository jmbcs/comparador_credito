{"ast":null,"code":"import React from'react';import{CartesianGrid,Legend,Line,LineChart,ResponsiveContainer,Tooltip,XAxis,YAxis}from'recharts';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export const DebtMapChart=_ref=>{let{data,selectedBanks}=_ref;// Filter data for selected banks and only show yearly data\nconst yearlyData=data.filter(entry=>selectedBanks.includes(entry.Banco)&&entry.MÃªs%12===0).map(entry=>({...entry,Ano:entry.Ano}));// Group by year and bank\nconst chartData=[];const years=Array.from(new Set(yearlyData.map(d=>d.Ano))).sort((a,b)=>a-b);years.forEach(year=>{const yearData={Ano:year};selectedBanks.forEach(bank=>{const bankData=yearlyData.find(d=>d.Banco===bank&&d.Ano===year);if(bankData){yearData[`${bank}_Capital`]=bankData[\"Capital em DÃ­vida (â‚¬)\"];yearData[`${bank}_Comissoes`]=bankData[\"ComissÃµes Acumuladas (â‚¬)\"];}});chartData.push(yearData);});const colors=['#3b82f6','#ef4444','#10b981','#f59e0b','#8b5cf6','#06b6d4','#84cc16','#f97316'];const formatCurrency=value=>{if(typeof value==='number'){return new Intl.NumberFormat('pt-PT',{style:'currency',currency:'EUR'}).format(value);}return value;};return/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-6\",children:\"\\uD83D\\uDCCA Evolu\\xE7\\xE3o do Capital em D\\xEDvida\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:400,children:/*#__PURE__*/_jsxs(LineChart,{data:chartData,margin:{top:20,right:30,left:20,bottom:20},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"#e5e7eb\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"Ano\",label:{value:'Ano',position:'insideBottom',offset:-10},tick:{fontSize:12}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'Capital em DÃ­vida (â‚¬)',angle:-90,position:'insideLeft'},tickFormatter:value=>`${(value/1000).toFixed(0)}k`,tick:{fontSize:12}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[formatCurrency(value),'Capital em DÃ­vida'],labelFormatter:label=>`Ano ${label}`,contentStyle:{backgroundColor:'white',border:'1px solid #e5e7eb',borderRadius:'8px'}}),/*#__PURE__*/_jsx(Legend,{}),selectedBanks.map((bank,index)=>/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:`${bank}_Capital`,name:`${bank} - Capital`,stroke:colors[index%colors.length],strokeWidth:3,dot:{r:5,strokeWidth:2},activeDot:{r:8}},`${bank}_Capital`))]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-xl font-semibold mb-6\",children:\"\\uD83D\\uDCC8 Evolu\\xE7\\xE3o das Comiss\\xF5es Acumuladas\"}),/*#__PURE__*/_jsx(ResponsiveContainer,{width:\"100%\",height:400,children:/*#__PURE__*/_jsxs(LineChart,{data:chartData,margin:{top:20,right:30,left:20,bottom:20},children:[/*#__PURE__*/_jsx(CartesianGrid,{strokeDasharray:\"3 3\",stroke:\"#e5e7eb\"}),/*#__PURE__*/_jsx(XAxis,{dataKey:\"Ano\",label:{value:'Ano',position:'insideBottom',offset:-10},tick:{fontSize:12}}),/*#__PURE__*/_jsx(YAxis,{label:{value:'ComissÃµes Acumuladas (â‚¬)',angle:-90,position:'insideLeft'},tickFormatter:value=>`${(value/1000).toFixed(0)}k`,tick:{fontSize:12}}),/*#__PURE__*/_jsx(Tooltip,{formatter:value=>[formatCurrency(value),'ComissÃµes Acumuladas'],labelFormatter:label=>`Ano ${label}`,contentStyle:{backgroundColor:'white',border:'1px solid #e5e7eb',borderRadius:'8px'}}),/*#__PURE__*/_jsx(Legend,{}),selectedBanks.map((bank,index)=>/*#__PURE__*/_jsx(Line,{type:\"monotone\",dataKey:`${bank}_Comissoes`,name:`${bank} - ComissÃµes`,stroke:colors[index%colors.length],strokeWidth:3,dot:{r:5,strokeWidth:2},activeDot:{r:8}},`${bank}_Comissoes`))]})})]})]});};","map":{"version":3,"names":["React","CartesianGrid","Legend","Line","LineChart","ResponsiveContainer","Tooltip","XAxis","YAxis","jsx","_jsx","jsxs","_jsxs","DebtMapChart","_ref","data","selectedBanks","yearlyData","filter","entry","includes","Banco","MÃªs","map","Ano","chartData","years","Array","from","Set","d","sort","a","b","forEach","year","yearData","bank","bankData","find","push","colors","formatCurrency","value","Intl","NumberFormat","style","currency","format","className","children","width","height","margin","top","right","left","bottom","strokeDasharray","stroke","dataKey","label","position","offset","tick","fontSize","angle","tickFormatter","toFixed","formatter","labelFormatter","contentStyle","backgroundColor","border","borderRadius","index","type","name","length","strokeWidth","dot","r","activeDot"],"sources":["/home/julio/github/jmbcs/comparador_credito/src/components/DebtMapChart.tsx"],"sourcesContent":["import React from 'react';\nimport { CartesianGrid, Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { DebtMapEntry } from '../types';\n\ninterface DebtMapChartProps {\n    data: DebtMapEntry[];\n    selectedBanks: string[];\n}\n\nexport const DebtMapChart: React.FC<DebtMapChartProps> = ({ data, selectedBanks }) => {\n    // Filter data for selected banks and only show yearly data\n    const yearlyData = data\n        .filter(entry => selectedBanks.includes(entry.Banco) && entry.MÃªs % 12 === 0)\n        .map(entry => ({\n            ...entry,\n            Ano: entry.Ano\n        }));\n\n    // Group by year and bank\n    const chartData: any[] = [];\n    const years = Array.from(new Set(yearlyData.map(d => d.Ano))).sort((a: number, b: number) => a - b);\n\n    years.forEach(year => {\n        const yearData: any = { Ano: year };\n        selectedBanks.forEach(bank => {\n            const bankData = yearlyData.find(d => d.Banco === bank && d.Ano === year);\n            if (bankData) {\n                yearData[`${bank}_Capital`] = bankData[\"Capital em DÃ­vida (â‚¬)\"];\n                yearData[`${bank}_Comissoes`] = bankData[\"ComissÃµes Acumuladas (â‚¬)\"];\n            }\n        });\n        chartData.push(yearData);\n    });\n\n    const colors = ['#3b82f6', '#ef4444', '#10b981', '#f59e0b', '#8b5cf6', '#06b6d4', '#84cc16', '#f97316'];\n\n    const formatCurrency = (value: any) => {\n        if (typeof value === 'number') {\n            return new Intl.NumberFormat('pt-PT', {\n                style: 'currency',\n                currency: 'EUR'\n            }).format(value);\n        }\n        return value;\n    };\n\n    return (\n        <div className=\"space-y-8\">\n            {/* Capital em DÃ­vida Chart */}\n            <div className=\"card\">\n                <h3 className=\"text-xl font-semibold mb-6\">ðŸ“Š EvoluÃ§Ã£o do Capital em DÃ­vida</h3>\n                <ResponsiveContainer width=\"100%\" height={400}>\n                    <LineChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" />\n                        <XAxis\n                            dataKey=\"Ano\"\n                            label={{ value: 'Ano', position: 'insideBottom', offset: -10 }}\n                            tick={{ fontSize: 12 }}\n                        />\n                        <YAxis\n                            label={{ value: 'Capital em DÃ­vida (â‚¬)', angle: -90, position: 'insideLeft' }}\n                            tickFormatter={(value) => `${(value / 1000).toFixed(0)}k`}\n                            tick={{ fontSize: 12 }}\n                        />\n                        <Tooltip\n                            formatter={(value: any) => [formatCurrency(value), 'Capital em DÃ­vida']}\n                            labelFormatter={(label) => `Ano ${label}`}\n                            contentStyle={{ backgroundColor: 'white', border: '1px solid #e5e7eb', borderRadius: '8px' }}\n                        />\n                        <Legend />\n                        {selectedBanks.map((bank, index) => (\n                            <Line\n                                key={`${bank}_Capital`}\n                                type=\"monotone\"\n                                dataKey={`${bank}_Capital`}\n                                name={`${bank} - Capital`}\n                                stroke={colors[index % colors.length]}\n                                strokeWidth={3}\n                                dot={{ r: 5, strokeWidth: 2 }}\n                                activeDot={{ r: 8 }}\n                            />\n                        ))}\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n\n            {/* ComissÃµes Acumuladas Chart */}\n            <div className=\"card\">\n                <h3 className=\"text-xl font-semibold mb-6\">ðŸ“ˆ EvoluÃ§Ã£o das ComissÃµes Acumuladas</h3>\n                <ResponsiveContainer width=\"100%\" height={400}>\n                    <LineChart data={chartData} margin={{ top: 20, right: 30, left: 20, bottom: 20 }}>\n                        <CartesianGrid strokeDasharray=\"3 3\" stroke=\"#e5e7eb\" />\n                        <XAxis\n                            dataKey=\"Ano\"\n                            label={{ value: 'Ano', position: 'insideBottom', offset: -10 }}\n                            tick={{ fontSize: 12 }}\n                        />\n                        <YAxis\n                            label={{ value: 'ComissÃµes Acumuladas (â‚¬)', angle: -90, position: 'insideLeft' }}\n                            tickFormatter={(value) => `${(value / 1000).toFixed(0)}k`}\n                            tick={{ fontSize: 12 }}\n                        />\n                        <Tooltip\n                            formatter={(value: any) => [formatCurrency(value), 'ComissÃµes Acumuladas']}\n                            labelFormatter={(label) => `Ano ${label}`}\n                            contentStyle={{ backgroundColor: 'white', border: '1px solid #e5e7eb', borderRadius: '8px' }}\n                        />\n                        <Legend />\n                        {selectedBanks.map((bank, index) => (\n                            <Line\n                                key={`${bank}_Comissoes`}\n                                type=\"monotone\"\n                                dataKey={`${bank}_Comissoes`}\n                                name={`${bank} - ComissÃµes`}\n                                stroke={colors[index % colors.length]}\n                                strokeWidth={3}\n                                dot={{ r: 5, strokeWidth: 2 }}\n                                activeDot={{ r: 8 }}\n                            />\n                        ))}\n                    </LineChart>\n                </ResponsiveContainer>\n            </div>\n        </div>\n    );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}